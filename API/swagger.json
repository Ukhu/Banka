{
  "swagger": "2.0",
  "info": {
    "description": "Banka is a lightweight core banking application that allows users perform simple transactions.",
    "version": "1.0.0",
    "title": "Banka",
    "contact": {
      "email": "osaukhu.bi@gmail.com"
    }
  },
  "host": "osaukhu-banka.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Users",
      "description": "Signup, Login, and view User's Accounts"
    },
    {
      "name": "Accounts",
      "description": "Adds, views, updates, and delete Accounts"
    },
    {
      "name": "Transactions",
      "description": "Adds and views Transactions"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Registers a user",
        "description": "This endpoint registers a new user through a post request",
        "operationId": "signup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully registered"
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Email already exists"
          },
          "428": {
            "description": "Already logged in. Log out first"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/create-staff": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Registers a staff",
        "description": "This endpoint creates a new cashier or admin account",
        "operationId": "createStaff",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "description": "JWT Token Authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "isAdmin": {
                  "type": "string"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Staff successfully registered"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden access"
          },
          "409": {
            "description": "Email already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Logs user in",
        "description": "This endpoint signs in a user",
        "operationId": "signin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully signs in user"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Email or password is wrong OR Failed authentication"
          },
          "428": {
            "description": "Already signed in"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{userEmail}/accounts": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets user's bank accounts",
        "decription": "Gets the list of all bank accounts of a particular user",
        "operationId": "retrieveUserAccounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "description": "JWT Token Authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "userEmail",
            "in": "path",
            "description": "email of the particular user ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Found user's accounts"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "403": {
            "description": "Forbidden Access"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/accounts": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Creates a bank account",
        "description": "Add new bank account to database for a user",
        "operationId": "createAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "description": "JWT Token Authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Account successfully created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "403": {
            "description": "Forbidden Access"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Gets accounts in database",
        "decription": "Gets all the accounts in the database or based on some query",
        "operationId": "listAccounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "description": "JWT Token Authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Filter for accounts to return",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Found the accounts"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "403": {
            "description": "Forbidden Access"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/accounts/{accountNumber}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Gets account details",
        "decription": "Gets the details of a particular account",
        "operationId": "retrieveAccount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "description": "JWT Token Authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountNumber",
            "in": "path",
            "description": "account number of particular account to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Account found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "403": {
            "description": "Forbidden Access"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Updates account",
        "description": "Changes the account status to either active or dormant",
        "operationId": "updateAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "description": "JWT Token Authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountNumber",
            "in": "path",
            "description": "account number of particular account to return",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Account status successfully updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "403": {
            "description": "Forbidden Access"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Deletes account",
        "description": "Removes a particular account from the database",
        "operationId": "deleteAccount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "description": "JWT Token Authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountNumber",
            "in": "path",
            "description": "account number of particular account to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted successfully"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "403": {
            "description": "Forbidden Access"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/accounts/{accountNumber}/transactions": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Gets account transaction history",
        "decription": "Gets the list of all transactions for a particular account",
        "operationId": "retrieveAccountTransactionHistory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "description": "JWT Token Authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountNumber",
            "in": "path",
            "description": "account number of particular account to return",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Found account transaction history"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "403": {
            "description": "Forbidden Access"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Gets transaction details",
        "decription": "Gets the details of a particular transaction",
        "operationId": "retrieveTransactionDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "description": "JWT Token Authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "transactionId of the transaction to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Found transaction"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "403": {
            "description": "Forbidden Access"
          },
          "404": {
            "description": "Transaction not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/transactions/{accountNumber}/credit": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Credit account",
        "description": "Creates a new transaction by crediting an account",
        "operationId": "creditAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "description": "JWT Token Authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "accountNumber",
            "description": "Account number of the account to be credited",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Account successfully credited"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "403": {
            "description": "Forbidden Access"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/transactions/{accountNumber}/debit": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Debit account",
        "description": "Creates a new transaction by debiting an account",
        "operationId": "debitAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "description": "JWT Token Authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "accountNumber",
            "description": "Account number of the account to be debited",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Account successfully debited"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "403": {
            "description": "Forbidden Access"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  }
}